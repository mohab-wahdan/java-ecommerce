package com.bookstore.entities;// default package
// Generated Aug 24, 2024, 4:07:45â€¯PM by Hibernate Tools 6.5.2.Final


import jakarta.persistence.*;

import java.math.BigDecimal;
import java.sql.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name="product"
    ,catalog="bookstore"
)
public class Product  implements java.io.Serializable {


     private int productId;
     private String name;
     private String description;
     private BigDecimal price;
     private String imagesPath;
     private Integer stockQuantity;
     private String author;
     private Date publishDate;
     private Integer pages;
     private Boolean availability;
     private Set<BuyerChosenProducts> buyerChosenProductses = new HashSet<BuyerChosenProducts>(0);
     private Set<OrderHasProducts> orderHasProductses = new HashSet<OrderHasProducts>(0);
     private Set<Category> categories = new HashSet<Category>(0);

    public Product() {
    }

	
    public Product(int productId, String name, BigDecimal price) {
        this.productId = productId;
        this.name = name;
        this.price = price;
    }
    public Product(int productId, String name, String description, BigDecimal price, String imagesPath, Integer stockQuantity, String author, Date publishDate, Integer pages, Boolean availability, Set<BuyerChosenProducts> buyerChosenProductses, Set<OrderHasProducts> orderHasProductses, Set<Category> categories) {
       this.productId = productId;
       this.name = name;
       this.description = description;
       this.price = price;
       this.imagesPath = imagesPath;
       this.stockQuantity = stockQuantity;
       this.author = author;
       this.publishDate = publishDate;
       this.pages = pages;
       this.availability = availability;
       this.buyerChosenProductses = buyerChosenProductses;
       this.orderHasProductses = orderHasProductses;
       this.categories = categories;
    }
   
     @Id 

    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="product_id", unique=true, nullable=false)
    public int getProductId() {
        return this.productId;
    }
    
    public void setProductId(int productId) {
        this.productId = productId;
    }

    
    @Column(name="name", nullable=false, length=255)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="price", nullable=false, precision=10, scale=2)
    public BigDecimal getPrice() {
        return this.price;
    }
    
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    
    @Column(name="images_path", length=255)
    public String getImagesPath() {
        return this.imagesPath;
    }
    
    public void setImagesPath(String imagesPath) {
        this.imagesPath = imagesPath;
    }

    
    @Column(name="stock_quantity")
    public Integer getStockQuantity() {
        return this.stockQuantity;
    }
    
    public void setStockQuantity(Integer stockQuantity) {
        this.stockQuantity = stockQuantity;
    }

    
    @Column(name="author", length=255)
    public String getAuthor() {
        return this.author;
    }
    
    public void setAuthor(String author) {
        this.author = author;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="publish_date", length=10)
    public Date getPublishDate() {
        return this.publishDate;
    }
    
    public void setPublishDate(Date publishDate) {
        this.publishDate = publishDate;
    }

    
    @Column(name="pages")
    public Integer getPages() {
        return this.pages;
    }
    
    public void setPages(Integer pages) {
        this.pages = pages;
    }

    
    @Column(name="availability")
    public Boolean getAvailability() {
        return this.availability;
    }
    
    public void setAvailability(Boolean availability) {
        this.availability = availability;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="product")
    public Set<BuyerChosenProducts> getBuyerChosenProductses() {
        return this.buyerChosenProductses;
    }
    
    public void setBuyerChosenProductses(Set<BuyerChosenProducts> buyerChosenProductses) {
        this.buyerChosenProductses = buyerChosenProductses;
    }

@OneToMany(fetch=FetchType.EAGER, mappedBy="product")
    public Set<OrderHasProducts> getOrderHasProductses() {
        return this.orderHasProductses;
    }
    
    public void setOrderHasProductses(Set<OrderHasProducts> orderHasProductses) {
        this.orderHasProductses = orderHasProductses;
    }

@ManyToMany(fetch=FetchType.EAGER, mappedBy="products")
    public Set<Category> getCategories() {
        return this.categories;
    }
    
    public void setCategories(Set<Category> categories) {
        this.categories = categories;
    }




}


